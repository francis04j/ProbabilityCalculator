# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and deploy ProbabilityApi to an Azure Web App

defaults:
    run:
      working-directory: ./ProbabilityApi/ProbabilityApi

env:
  AZURE_WEBAPP_NAME: dotnetwebapi001   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '../../ProbabilityApi/ProbabilityApi'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8'                 # set this to the .NET Core version to use

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

    # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release
          echo "hello"
          echo ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          dotnet publish -c Release --property:PublishDir='${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/ProbabilityApi' 
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v3
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/ProbabilityApi'

    #   - name: Set up dependency caching for faster builds
    #     uses: actions/cache@v3
    #     with:
    #       path: ~/.nuget/packages
    #       key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
    #       restore-keys: |
    #         ${{ runner.os }}-nuget-

#       - name: Build with dotnet
#         run: dotnet build --configuration Release

#       - name: dotnet publish
#         run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

#       - name: Upload artifact for deployment job
#         uses: actions/upload-artifact@v4
#         with:
#           name: .net-app
#           path: ${{env.DOTNET_ROOT}}/myapp

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     environment:
#       name: 'production'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v4
#         with:
#           name: .net-app

#       - name: Deploy to Azure Web App
#         id: deploy-to-webapp
#         uses: azure/webapps-deploy@85270a1854658d167ab239bce43949edb336fa7c
#         with:
#           app-name: ${{ env.AZURE_WEBAPP_NAME }}
#           publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#           package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
